We use CUDA!
Traceback (most recent call last):
  File "run_train.py", line 140, in <module>
    train_result = train_eval( M , train_pack, test_pack , dev_pack, device, lr, batch_size, lr_decay,\
  File "run_train.py", line 54, in train_eval
    train_result['r2_train'].append( get_r2( targets, predictions) )
  File "/data/engs-deep-learning-biosystem/bras5181/projects/PredOT/code/functions.py", line 74, in get_r2
    return round( r2_score(x,y), 6)
  File "/home/bras5181/.local/lib/python3.8/site-packages/sklearn/metrics/_regression.py", line 789, in r2_score
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "/home/bras5181/.local/lib/python3.8/site-packages/sklearn/metrics/_regression.py", line 96, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "/home/bras5181/.local/lib/python3.8/site-packages/sklearn/utils/validation.py", line 800, in check_array
    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")
  File "/home/bras5181/.local/lib/python3.8/site-packages/sklearn/utils/validation.py", line 114, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
262
Done!

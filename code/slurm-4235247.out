We use CUDA!
Traceback (most recent call last):
  File "run_train.py", line 140, in <module>
    train_result = train_eval( M , train_pack, test_pack , dev_pack, device, lr, batch_size, lr_decay,\
  File "run_train.py", line 42, in train_eval
    pred = model( ids, seqs )
  File "/apps/system/easybuild/software/PyTorch/1.7.1-fosscuda-2020b/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/data/engs-deep-learning-biosystem/bras5181/projects/PredOT/code/model.py", line 54, in forward
    emb = self.get_ESM2_embeddings(ids, seqs)
  File "/data/engs-deep-learning-biosystem/bras5181/projects/PredOT/code/model.py", line 35, in get_ESM2_embeddings
    emb = self.esm2_model(batch_tokens, repr_layers=[6], return_contacts=False)
  File "/apps/system/easybuild/software/PyTorch/1.7.1-fosscuda-2020b/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/bras5181/.local/lib/python3.8/site-packages/esm/model/esm2.py", line 84, in forward
    x = self.embed_scale * self.embed_tokens(tokens)
  File "/apps/system/easybuild/software/PyTorch/1.7.1-fosscuda-2020b/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/apps/system/easybuild/software/PyTorch/1.7.1-fosscuda-2020b/lib/python3.8/site-packages/torch/nn/modules/sparse.py", line 124, in forward
    return F.embedding(
  File "/apps/system/easybuild/software/PyTorch/1.7.1-fosscuda-2020b/lib/python3.8/site-packages/torch/nn/functional.py", line 1852, in embedding
    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)
RuntimeError: Expected tensor for argument #1 'indices' to have scalar type Long; but got torch.cuda.HalfTensor instead (while checking arguments for embedding)
24
Done!
